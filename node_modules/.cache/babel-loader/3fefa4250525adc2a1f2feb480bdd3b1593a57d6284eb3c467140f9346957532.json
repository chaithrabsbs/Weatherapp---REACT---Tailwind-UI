{"ast":null,"code":"var _jsxFileName = \"/Users/chaithrabs/Desktop/REACT/weatherapp/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport UilReact from '@iconscout/react-unicons/icons/uil-react';\nimport TopButtons from './components/TopButtons';\nimport Inputs from './components/Inputs';\nimport TimeandLocation from './components/TimeandLocation';\nimport TemperatureAndDetails from './components/TemperatureAndDetails';\nimport Forecast from './components/Forecast';\nimport getFormattedWeatherData from \"./Services/weatherServic\";\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState({\n    q: \"berlin\"\n  });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      await getFormattedWeatherData({\n        ...query,\n        units\n      }).then(data => {\n        setWeather(data);\n      });\n    };\n    fetchWeather();\n  }, [query, units]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" mx-auto max-w-screen-sm mt-4 py-5 px-4 bg-gradient-to-br from-cyan-700 to-blue-700 h-fit shadow-xl shadow-gray-600\",\n    children: [/*#__PURE__*/_jsxDEV(TopButtons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimeandLocation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TemperatureAndDetails, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n      title: \"hourly forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n      title: \"daily forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cOi0p41aZgcnuXoS3zpKyodBAaQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["UilReact","TopButtons","Inputs","TimeandLocation","TemperatureAndDetails","Forecast","getFormattedWeatherData","useEffect","jsxDEV","_jsxDEV","App","_s","query","setQuery","useState","q","units","setUnits","weather","setWeather","fetchWeather","then","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["/Users/chaithrabs/Desktop/REACT/weatherapp/src/App.js"],"sourcesContent":[" \nimport './App.css';\nimport UilReact from '@iconscout/react-unicons/icons/uil-react'\nimport TopButtons from './components/TopButtons';\nimport Inputs from './components/Inputs';\nimport TimeandLocation from './components/TimeandLocation';\nimport TemperatureAndDetails from './components/TemperatureAndDetails';\nimport Forecast from './components/Forecast';\nimport getFormattedWeatherData from \"./Services/weatherServic\";\nimport { useEffect } from 'react';\n\nfunction App() {\n\n  const [query, setQuery] = useState({q: \"berlin\"});\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      await getFormattedWeatherData({...query, units}).then(data => {\n        setWeather(data);\n      });\n    };\n\n    fetchWeather();\n  }, [query,units]);\n\n  \n  return (\n    <div className=' mx-auto max-w-screen-sm mt-4 py-5 px-4 bg-gradient-to-br from-cyan-700 to-blue-700 h-fit shadow-xl shadow-gray-600'>\n      <TopButtons />\n      <Inputs />\n\n      <TimeandLocation/>\n      <TemperatureAndDetails/>\n      <Forecast title=\"hourly forecast\"/>\n      <Forecast title=\"daily forecast\"/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,0CAA0C;AAC/D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,qBAAqB,MAAM,oCAAoC;AACtE,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,uBAAuB,MAAM,0BAA0B;AAC9D,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC;IAACC,CAAC,EAAE;EAAQ,CAAC,CAAC;EACjD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAE5CP,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMd,uBAAuB,CAAC;QAAC,GAAGM,KAAK;QAAEI;MAAK,CAAC,CAAC,CAACK,IAAI,CAACC,IAAI,IAAI;QAC5DH,UAAU,CAACG,IAAI,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC;IAEDF,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACR,KAAK,EAACI,KAAK,CAAC,CAAC;EAGjB,oBACEP,OAAA;IAAKc,SAAS,EAAC,qHAAqH;IAAAC,QAAA,gBAClIf,OAAA,CAACR,UAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdnB,OAAA,CAACP,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVnB,OAAA,CAACN,eAAe;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClBnB,OAAA,CAACL,qBAAqB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACxBnB,OAAA,CAACJ,QAAQ;MAACwB,KAAK,EAAC;IAAiB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnCnB,OAAA,CAACJ,QAAQ;MAACwB,KAAK,EAAC;IAAgB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV;AAACjB,EAAA,CA5BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}