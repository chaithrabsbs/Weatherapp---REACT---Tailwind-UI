{"ast":null,"code":"const API_KEY = \"f3a484cebcb66cddbc0df775cf6111f0\";\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5/\";\nconst getWeatherData = (infoType, searchParams) => {\n  const url = new URL(BASE_URL + infoType);\n  url.search = new URLSearchParams({\n    ...searchParams,\n    appid: API_KEY\n  });\n  return fetch(url).then(res => res.json());\n};\nconst formatCurrentWeather = data => {\n  const {\n    coord: {\n      lat,\n      lon\n    },\n    main: {\n      temp,\n      feels_like,\n      temp_min,\n      temp_max,\n      humidity\n    },\n    name,\n    dt,\n    sys: {\n      country,\n      sunrise,\n      sunset\n    },\n    weather,\n    wind: {\n      speed\n    }\n  } = data;\n  const {\n    main: details,\n    icon\n  } = weather[0];\n  return {\n    lat,\n    lon,\n    temp,\n    feels_like,\n    temp_min,\n    temp_max,\n    humidity,\n    name,\n    dt,\n    country,\n    sunrise,\n    sunset,\n    details,\n    icon,\n    speed\n  };\n};\nconst getFormattedWeatherData = async searchParams => {\n  const formattedCurrentWeather = await getWeatherData('weather', searchParams).then(formatCurrentWeather);\n  return formattedCurrentWeather;\n};","map":{"version":3,"names":["API_KEY","BASE_URL","getWeatherData","infoType","searchParams","url","URL","search","URLSearchParams","appid","fetch","then","res","json","formatCurrentWeather","data","coord","lat","lon","main","temp","feels_like","temp_min","temp_max","humidity","name","dt","sys","country","sunrise","sunset","weather","wind","speed","details","icon","getFormattedWeatherData","formattedCurrentWeather"],"sources":["/Users/chaithrabs/Desktop/REACT/weatherapp/src/Services/weatherServic.js"],"sourcesContent":["const API_KEY = \"f3a484cebcb66cddbc0df775cf6111f0\";\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5/\";\n\nconst getWeatherData = (infoType, searchParams) => {\n  const url = new URL(BASE_URL + infoType);\n  url.search = new URLSearchParams({ ...searchParams, appid: API_KEY });\n  \n  return fetch(url).then((res) => res.json());\n};\n\nconst formatCurrentWeather = (data) => {\nconst {\n    coord: {lat,lon},\n    main: {temp,feels_like,temp_min,temp_max, humidity},\n    name,\n    dt,\n    sys:{country,sunrise,sunset},\n    weather,\n    wind:{speed}\n} = data\n\nconst {main: details, icon} = weather[0]\n\nreturn {lat,lon,temp, feels_like, temp_min, temp_max,humidity, name,\ndt, country, sunrise, sunset, details,icon, speed}\n}\n\nconst getFormattedWeatherData = async (searchParams) => {\n    const formattedCurrentWeather = await getWeatherData('weather',searchParams).then(formatCurrentWeather)\n    return formattedCurrentWeather;\n}"],"mappings":"AAAA,MAAMA,OAAO,GAAG,kCAAkC;AAClD,MAAMC,QAAQ,GAAG,0CAA0C;AAE3D,MAAMC,cAAc,GAAGA,CAACC,QAAQ,EAAEC,YAAY,KAAK;EACjD,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAACL,QAAQ,GAAGE,QAAQ,CAAC;EACxCE,GAAG,CAACE,MAAM,GAAG,IAAIC,eAAe,CAAC;IAAE,GAAGJ,YAAY;IAAEK,KAAK,EAAET;EAAQ,CAAC,CAAC;EAErE,OAAOU,KAAK,CAACL,GAAG,CAAC,CAACM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;AAC7C,CAAC;AAED,MAAMC,oBAAoB,GAAIC,IAAI,IAAK;EACvC,MAAM;IACFC,KAAK,EAAE;MAACC,GAAG;MAACC;IAAG,CAAC;IAChBC,IAAI,EAAE;MAACC,IAAI;MAACC,UAAU;MAACC,QAAQ;MAACC,QAAQ;MAAEC;IAAQ,CAAC;IACnDC,IAAI;IACJC,EAAE;IACFC,GAAG,EAAC;MAACC,OAAO;MAACC,OAAO;MAACC;IAAM,CAAC;IAC5BC,OAAO;IACPC,IAAI,EAAC;MAACC;IAAK;EACf,CAAC,GAAGlB,IAAI;EAER,MAAM;IAACI,IAAI,EAAEe,OAAO;IAAEC;EAAI,CAAC,GAAGJ,OAAO,CAAC,CAAC,CAAC;EAExC,OAAO;IAACd,GAAG;IAACC,GAAG;IAACE,IAAI;IAAEC,UAAU;IAAEC,QAAQ;IAAEC,QAAQ;IAACC,QAAQ;IAAEC,IAAI;IACnEC,EAAE;IAAEE,OAAO;IAAEC,OAAO;IAAEC,MAAM;IAAEI,OAAO;IAACC,IAAI;IAAEF;EAAK,CAAC;AAClD,CAAC;AAED,MAAMG,uBAAuB,GAAG,MAAOhC,YAAY,IAAK;EACpD,MAAMiC,uBAAuB,GAAG,MAAMnC,cAAc,CAAC,SAAS,EAACE,YAAY,CAAC,CAACO,IAAI,CAACG,oBAAoB,CAAC;EACvG,OAAOuB,uBAAuB;AAClC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}